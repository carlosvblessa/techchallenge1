kable_styling(latex_options = "HOLD_position", font_size = 8) |>
kable_classic_2(full_width = F) |>
footnote(general = fonte,
footnote_as_chunk = T, general_title = "")
skim_latek(realtime_data, where(is.Date)) |>
select(-skim_type)
skim_latek(realtime_data, where(is.Date)) |>
select(-skim_type) |>
kable(caption = "Resumo estatístico dos dados numéricos",
booktabs = T, format = "latex", linesep = "", digits = 0,
format.args = list(big.mark = '.', decimal.mark = ',')
#, col.names = c('Variável','Média','Desvio Padrão','Mínimo','1º Quartil','Mediana','3º Quartil','Máximo')
)|>
kable_styling(latex_options = "HOLD_position", font_size = 8) |>
kable_classic_2(full_width = F) |>
footnote(general = fonte,
footnote_as_chunk = T, general_title = "")
skim_latek(realtime_data, where(is.POSIXct)) |>
select(-skim_type)
skim_latek(realtime_data, where(is.POSIXct)) |>
select(-skim_type, -POSIXct.n_unique)
tribble(~Variável, ~Descrição,
'uac' , 'Tensão da corrente alternada',
'date_time'     , 'Data e hora da medição')
tribble(~Variável, ~Descrição,
'uac' , 'Tensão da corrente alternada',
'date_time'     , 'Data e hora da medição') |>
kable(caption = "Tabela realtime_data",
booktabs = T, format = "latex", linesep = "") |>
kable_styling(latex_options = "HOLD_position", font_size = 8) |>
kable_classic_2(full_width = F) |>
footnote(general = fonte,
footnote_as_chunk = T, general_title = "")
load("~/FCD/Fronius/corrente_potencia_tensao/.RData")
corr_pot_tensao |>
filter(tensao_ac > 233 &
data >= as.POSIXct("2020-01-01") &
data < as.POSIXct("2021-01-01")) |>
select(tensao_ac, dia, hora)
library(readr)
library(dplyr)
library(ggplot2)
corr_pot_tensao |>
filter(tensao_ac > 233 &
data >= as.POSIXct("2020-01-01") &
data < as.POSIXct("2021-01-01")) |>
select(tensao_ac, dia, hora)
corr_pot_tensao |>
filter(tensao_ac >= 233 &
data >= as.POSIXct("2021-01-01") &
data < as.POSIXct("2022-01-01")) |>
select(tensao_ac, dia, hora)
corr_pot_tensao |>
filter(tensao_ac >= 233 &
data >= as.POSIXct("2022-01-01") &
data < as.POSIXct("2023-01-01")) |>
select(tensao_ac, dia, hora)
corr_pot_tensao |>
filter(tensao_ac >= 233 &
data >= as.POSIXct("2023-01-01") &
data < as.POSIXct("2024-01-01")) |>
select(tensao_ac, dia, hora)
corr_pot_tensao |>
filter(tensao_ac >= 233 &
data >= as.POSIXct("2024-01-01") &
data < as.POSIXct("2025-01-01")) |>
select(tensao_ac, dia, hora)
corr_pot_tensao |>
filter(tensao_ac > 233 &
data >= as.POSIXct("2020-01-01") &
data < as.POSIXct("2021-01-01")) |>
select(tensao_ac, data)
corr_pot_tensao |>
filter(tensao_ac >= 233 &
data >= as.POSIXct("2021-01-01") &
data < as.POSIXct("2022-01-01")) |>
select(tensao_ac, data)
corr_pot_tensao |>
filter(tensao_ac >= 233 &
data >= as.POSIXct("2022-01-01") &
data < as.POSIXct("2023-01-01")) |>
select(tensao_ac, data)
corr_pot_tensao |>
filter(tensao_ac >= 233 &
data >= as.POSIXct("2023-01-01") &
data < as.POSIXct("2024-01-01")) |>
select(tensao_ac, data)
corr_pot_tensao |>
filter(tensao_ac >= 233 &
data >= as.POSIXct("2024-01-01") &
data < as.POSIXct("2025-01-01")) |>
select(tensao_ac, data)
update.packages(ask = F, Ncpus = 12, verbose = T)
update.packages(ask = F, Ncpus = 12, verbose = T)
# # Etapa 15: Instala os pacotes restantes
remotes::install_github("lmullen/genderdata")
remotes::install_github("ipeaGIT/geobr", subdir = "r-package")
remotes::install_github("mlr-org/mlr3proba")
remotes::install_github("mongosoup/rmongodb")
remotes::install_github("dalpozz/unbalanced")
remotes::install_github("ropensci/tabulizer")
remotes::install_github("pablo14/funModeling")
remotes::install_github("cran/clusterCrit")
remotes::install_github("cran/muStat")
remotes::install_github("kassambara/easyGgplot2")
remotes::install_github("tbonza/supml")
remotes::install_github("cran/foreign")
remotes::install_github("kupietz/kableExtra")
remotes::install_github('stefano-meschiari/latex2exp')
remotes::install_github("grantmcdermott/parttree")
remotes::install_github("mlverse/torch")
remotes::install_github("tidymodels/brulee")
remotes::install_github('ML4LHS/runway')
remotes::install_github("tidymodels/learntidymodels")
remotes::install_github("EmilHvitfeldt/scotus")
install.packages("https://cran.r-project.org/src/contrib/Archive/corpus/corpus_0.10.2.tar.gz", repo=NULL, type="source")
BiocManager::install(ask = F, Ncpus = 12, verbose = T)
# Etapa 12: Instala o pacote ROracle
install.packages("ROracle",
configure.args = c("ROracle"="--with-oci-lib=/opt/oracle/instantclient_19_8 --with-oci-inc=/opt/oracle/instantclient_19_8/sdk/include"))
# Etapa 12: Instala o pacote ROracle
install.packages("ROracle",
configure.args = c("ROracle"="--with-oci-lib=/opt/oracle/instantclient_19_8 --with-oci-inc=/opt/oracle/instantclient_19_8/sdk/include"))
names(iris)
update.packages(ask = F, Ncpus = 12, verbose = T)
BiocManager::install(ask = F, Ncpus = 12, verbose = T)
# # Etapa 15: Instala os pacotes restantes
remotes::install_github("lmullen/genderdata")
remotes::install_github("ipeaGIT/geobr", subdir = "r-package")
remotes::install_github("mlr-org/mlr3proba")
remotes::install_github("mongosoup/rmongodb")
remotes::install_github("dalpozz/unbalanced")
remotes::install_github("ropensci/tabulizer")
remotes::install_github("ropensci/tabulizer")
remotes::install_github("pablo14/funModeling")
remotes::install_github("cran/clusterCrit")
remotes::install_github("cran/muStat")
remotes::install_github("kassambara/easyGgplot2")
remotes::install_github("tbonza/supml")
remotes::install_github("cran/foreign")
remotes::install_github("kupietz/kableExtra")
remotes::install_github('stefano-meschiari/latex2exp')
remotes::install_github("grantmcdermott/parttree")
remotes::install_github("mlverse/torch")
remotes::install_github("tidymodels/brulee")
remotes::install_github('ML4LHS/runway')
remotes::install_github("tidymodels/learntidymodels")
remotes::install_github("EmilHvitfeldt/scotus")
install.packages("https://cran.r-project.org/src/contrib/Archive/corpus/corpus_0.10.2.tar.gz", repo=NULL, type="source")
update.packages(ask = F, Ncpus = 12, verbose = T)
remotes::install_github("pablo14/funModeling")
remotes::install_github("kupietz/kableExtra")
usethis::edit_r_environ()
plumber::plumb(file='DEPLOY/teste/plumber.R')$run()
plumb(file='DEPLOY/teste/plumber.R')$run()
plumber::plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumber::plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='DEPLOY/api_species_v3.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
plumb(file='IMFC_24_2Q/fechada_oficio_xgb_v1/plumber.R')$run()
# Etapa 12: Instala o pacote ROracle
install.packages("ROracle",
configure.args = c("ROracle"="--with-oci-lib=/opt/oracle/instantclient_19_8 --with-oci-inc=/opt/oracle/instantclient_19_8/sdk/include"))
# Etapa 12: Instala o pacote ROracle
install.packages("ROracle",
configure.args = c("ROracle"="--with-oci-lib=/opt/oracle/instantclient_19_8 --with-oci-inc=/opt/oracle/instantclient_19_8/sdk/include"))
library(ROracle)
install.packages("ROracle")
installed.packages("ROracle")
as.data.frame(installed.packages(ROracle))
as.data.frame(installed.packages("ROracle"))
as.data.frame(installed.packages())
dplyr::as_tibble(installed.packages())
dplyr::as_tibble(installed.packages()) |>
select(Package == 'ROracle')
dplyr::as_tibble(installed.packages()) |>
dplyr::select(Package == 'ROracle')
dplyr::as_tibble(installed.packages()) |>
dplyr::filter(Package == 'ROracle')
tmp <-
dplyr::as_tibble(installed.packages()) |>
dplyr::filter(Package == 'ROracle')
View(tmp)
load("~/FCD/IMFC_24_2Q/.RData")
cadastro_df <- readRDS("~/FCD/IMFC_24_2Q/api_receita_ws/cadastro_df.rds")
qsa_df <- readRDS("~/FCD/IMFC_24_2Q/api_receita_ws/qsa_df.rds")
atividade_principal_df <- readRDS("~/FCD/IMFC_24_2Q/api_receita_ws/atividade_principal_df.rds")
atividades_secundarias_df <- readRDS("~/FCD/IMFC_24_2Q/api_receita_ws/atividades_secundarias_df.rds")
View(qsa_df)
View(atividades_secundarias_df)
View(atividade_principal_df)
# Tabela cadastro_df
cat("Tabela: cadastro_df\n")
cat("nom_razao_social: ", max(nchar(cadastro_df$nom_razao_social, keepNA = FALSE), na.rm = TRUE), "\n")
cat("nom_fantasia: ", max(nchar(cadastro_df$nom_fantasia, keepNA = FALSE), na.rm = TRUE), "\n")
# Tabela cadastro_df
cat("Tabela: cadastro_df\n")
cat("nom_razao_social: ", max(nchar(cadastro_df$CNPJ , keepNA = FALSE), na.rm = TRUE), "\n")
names(cadastro_df)
names(atividade_principal_df)
names(atividades_secundarias_df)
names(qsa_df)
cat("Tabela: cadastro_df\n")
cat("Nome_Empresa: ", max(nchar(cadastro_df$Nome_Empresa, keepNA = FALSE), na.rm = TRUE), "\n")
cat("Fantasia: ", max(nchar(cadastro_df$Fantasia, keepNA = FALSE), na.rm = TRUE), "\n")
cat("Natureza_Juridica: ", max(nchar(cadastro_df$Natureza_Juridica, keepNA = FALSE), na.rm = TRUE), "\n")
cat("Situacao_Cadastral: ", max(nchar(cadastro_df$Situacao_Cadastral, keepNA = FALSE), na.rm = TRUE), "\n")
cat("Tipo: ", max(nchar(cadastro_df$Tipo, keepNA = FALSE), na.rm = TRUE), "\n")
cat("Porte: ", max(nchar(cadastro_df$Porte, keepNA = FALSE), na.rm = TRUE), "\n")
cat("Logradouro: ", max(nchar(cadastro_df$Logradouro, keepNA = FALSE), na.rm = TRUE), "\n")
cat("Numero: ", max(nchar(cadastro_df$Numero, keepNA = FALSE), na.rm = TRUE), "\n")
cat("Complemento: ", max(nchar(cadastro_df$Complemento, keepNA = FALSE), na.rm = TRUE), "\n")
cat("CEP: ", max(nchar(cadastro_df$CEP, keepNA = FALSE), na.rm = TRUE), "\n")
cat("Bairro: ", max(nchar(cadastro_df$Bairro, keepNA = FALSE), na.rm = TRUE), "\n")
cat("Municipio: ", max(nchar(cadastro_df$Municipio, keepNA = FALSE), na.rm = TRUE), "\n")
cat("UF: ", max(nchar(cadastro_df$UF, keepNA = FALSE), na.rm = TRUE), "\n")
cat("Email: ", max(nchar(cadastro_df$Email, keepNA = FALSE), na.rm = TRUE), "\n")
cat("Telefone: ", max(nchar(cadastro_df$Telefone, keepNA = FALSE), na.rm = TRUE), "\n")
cat("Motivo_Situacao: ", max(nchar(cadastro_df$Motivo_Situacao, keepNA = FALSE), na.rm = TRUE), "\n")
# Tabela atividade_principal_df
cat("\nTabela: atividade_principal_df\n")
cat("Code: ", max(nchar(atividade_principal_df$Code, keepNA = FALSE), na.rm = TRUE), "\n")
cat("Text: ", max(nchar(atividade_principal_df$Text, keepNA = FALSE), na.rm = TRUE), "\n")
# Tabela atividades_secundarias_df
cat("\nTabela: atividades_secundarias_df\n")
cat("Code: ", max(nchar(atividades_secundarias_df$Code, keepNA = FALSE), na.rm = TRUE), "\n")
cat("Text: ", max(nchar(atividades_secundarias_df$Text, keepNA = FALSE), na.rm = TRUE), "\n")
# Tabela qsa_df
cat("\nTabela: qsa_df\n")
cat("Nome: ", max(nchar(qsa_df$Nome, keepNA = FALSE), na.rm = TRUE), "\n")
cat("Qual: ", max(nchar(qsa_df$Qual, keepNA = FALSE), na.rm = TRUE), "\n")
src(~/FCD/src/valida_cpf_cnpj.R)
src("~/FCD/src/valida_cpf_cnpj.R")
source("~/FCD/src/valida_cpf_cnpj.R")
validar_cnpj('047220300001')
source("~/FCD/src/valida_cpf_cnpj.R")
completar_cnpj('047220300001')
completar_cnpj('073657180001')
completar_cnpj('080014580001')
completar_cnpj('083091180001')
# # Etapa 15: Instala os pacotes restantes
remotes::install_github("ipeaGIT/geobr", subdir = "r-package",
ask = F, Ncpus = 12, verbose = TRUE)
remotes::install_github(c("lmullen/genderdata","mlr-org/mlr3proba",
"dalpozz/unbalanced","ropensci/tabulizer",
"pablo14/funModeling","cran/clusterCrit",
"cran/muStat","kupietz/kableExtra",
"tbonza/supml","ML4LHS/runway",
"cran/Bios2cor","cran/rgdal",
"EmilHvitfeldt/scotus","ddsjoberg/gtsummary",
"jthomasmock/gtExtras","insightsengineering/cardx"),
ask = F, Ncpus = 12, verbose = TRUE)
remotes::install_github("mongosoup/rmongodb",
ask = F, Ncpus = 12, verbose = TRUE)
remotes::install_github("tidymodels/brulee",
ask = F, Ncpus = 12, verbose = TRUE)
remotes::install_github("mlverse/torch",
ask = F, Ncpus = 12, verbose = TRUE)
update.packages(ask = F, Ncpus = 12, verbose = T)
BiocManager::install(ask = F, Ncpus = 12, verbose = T)
remotes::install_github(c("lmullen/genderdata","mlr-org/mlr3proba",
"dalpozz/unbalanced","ropensci/tabulizer",
"pablo14/funModeling","cran/clusterCrit",
"cran/muStat","kupietz/kableExtra",
"tbonza/supml","ML4LHS/runway",
"cran/Bios2cor","cran/rgdal",
"EmilHvitfeldt/scotus","ddsjoberg/gtsummary",
"jthomasmock/gtExtras","insightsengineering/cardx"),
ask = F, Ncpus = 12, verbose = TRUE)
knitr::opts_chunk$set(warning=FALSE, message=FALSE, comment=NA, echo=FALSE,
fig.width=6, fig.height=3.3, fig.align='center',
fig.pos = "H", out.extra = "")
# Configurações do ambiente
Sys.setenv('LC_ALL'='pt_BR.UTF-8')
options(digits=11)
options(width = 90)
options(scipen=999)
fonte <- 'Fonte: Dados de Sistemas da SEFAZ-AL'
size_title <- 11
size_y <- 6
# Criar o dataframe com os dados da tabela
tabela_variaveis <- data.frame(
Variavel = c(
"ind_resp",
"ind_esteve_inativo",
"dsc_situacao_cadastral_cnpj",
"dsc_motivo_situcada_cnpj",
"desc_motialsc_situcada",
"dsc_situacao_cadastral",
"dsc_ccc_sit_cont",
"dsc_ccc_sit_dest",
"ind_ativo_situcada",
"qtd_editais",
"ind_lista_excecao_ccc",
"qtd_ccc_mov",
"ind_email"
),
Descricao = c(
"Indicador do Responsável ter Atuado em Empresa Noteira (S/N)",
"Indicador de Contribuinte Já Esteve Inativo (S/N)",
"Descrição da Situação Cadastral no CNPJ",
"Descrição de Motivo de Alteração na Situação Cadastral no CNPJ",
"Descrição de Motivo de Alteração na Situação Cadastral",
"Descrição da Situação Cadastral",
"Descrição da Situação Como Contribuinte no Cadastro Centralizado",
"Descrição da Situação Como Destinatário no Cadastro Centralizado",
"Indica se o Contribuinte Está ou Não Ativo (S/N)",
"Quantidade de Editais Publicados Para o CNPJ",
"Indicador de o Contribuinte Está na Lista de Exceção do Cadastro Centralizado (S/N)",
"Quantidade de Movimentações no Cadastro Centralizado",
"Indicador do E-mail Constar em Empresa Noteira (S/N)"
)
)
View(tabela_variaveis)
knitr::opts_chunk$set(warning=FALSE, message=FALSE, comment=NA, echo=FALSE, out.extra = "")
# Configurações do ambiente
Sys.setenv('LC_ALL'='pt_BR.UTF-8')
options(digits=11)
options(width = 90)
options(scipen=999)
```{r, echo=FALSE, , fig.cap= 'Curvas ROC dos Modelos', out.width='80%',  fig.align='center', fig.pos='h' , fig.height=5}
colors()
source("~/.active-rstudio-document", echo=TRUE)
?as_flex_table
??as_flex_table
# Carregar os dados
selecao_MEI_v2 <- readRDS("../selecao_MEI_v2.rds")
# Gerar a tabela
tabela <-
selecao_MEI_v2 |>
select(ind_noteira,ind_simples_auxiliar,qtd_doc_arrec_cnpj,val_medio_por_item_receb) |>
set_variable_labels(ind_simples_auxiliar = "Indicador do Simples Nacional") |>
tbl_summary(by = ind_noteira) |>
add_p(test.args = all_tests("fisher.test") ~ list(workspace=2e8)) |>
modify_spanning_header(
all_stat_cols() ~ "**Empresas Noteiras**"
)
# Rotulação de variáveis
library(labelled)
# Sumarização e EDA
library(gtsummary)
library(gtExtras)
library(cardx)
library(gt)
reset_gtsummary_theme()
theme_gtsummary_language(language = "pt", big.mark = ".", decimal.mark = ",",
ci.sep = " - ", iqr.sep = " - ")
theme_gtsummary_eda()
# Gerar a tabela
tabela <-
selecao_MEI_v2 |>
select(ind_noteira,ind_simples_auxiliar,qtd_doc_arrec_cnpj,val_medio_por_item_receb) |>
set_variable_labels(ind_simples_auxiliar = "Indicador do Simples Nacional") |>
tbl_summary(by = ind_noteira) |>
add_p(test.args = all_tests("fisher.test") ~ list(workspace=2e8)) |>
modify_spanning_header(
all_stat_cols() ~ "**Empresas Noteiras**"
)
tabela
tabela_ft <-
tabela |>
as_flex_table()
tabela_ft
tabela_ft <- color(tabela_ft, color = "white", part = "all")
library(flextable)
tabela_ft <- color(tabela_ft, color = "white", part = "all")
tabela_ft
# Pacotes necessários
# Rotulação de variáveis
library(labelled)
# Sumarização e EDA
library(gtsummary)
library(gtExtras)
library(cardx)
library(gt)
reset_gtsummary_theme()
theme_gtsummary_language(language = "pt", big.mark = ".", decimal.mark = ",",
ci.sep = " - ", iqr.sep = " - ")
theme_gtsummary_eda()
library(flextable)
# Define parâmetros globais para TODAS as flextables
set_flextable_defaults(
font.color = "white",
border.color = "white",
background.color = "transparent",
font.size = 14,
table.align = "center",
border.width = 1
)
# (opcional) Reseta para os padrões originais depois
# init_flextable_defaults()
get_flextable_defaults()
?flextable::hline()
ftab <- flextable(head(iris))
library(flextable)
ftab <- flextable(head(iris))
ftab
ftab <- set_caption(ftab, "my caption")
ftab
library(officer)
autonum <- run_autonum(seq_id = "tab", bkm = "mtcars")
ftab <- flextable(head(mtcars))
ftab <- set_caption(ftab, caption = "mtcars data", autonum = autonum)
ftab
tabela_ft <-
selecao_MEI_v2 |>
select(ind_noteira,ind_simples_auxiliar,qtd_doc_arrec_cnpj,val_medio_por_item_receb) |>
set_variable_labels(ind_simples_auxiliar = "Indicador do Simples Nacional",
qtd_doc_arrec_cnpj = "Quantidade de Documentos de Arrecadação") |>
tbl_summary(by = ind_noteira) |>
add_p(test.args = all_tests("fisher.test") ~ list(workspace=2e8)) |>
modify_spanning_header(
all_stat_cols() ~ "**Empresas Noteiras**"
) |>
as_flex_table()
library(gtsummary)
tabela_ft <-
selecao_MEI_v2 |>
select(ind_noteira,ind_simples_auxiliar,qtd_doc_arrec_cnpj,val_medio_por_item_receb) |>
set_variable_labels(ind_simples_auxiliar = "Indicador do Simples Nacional",
qtd_doc_arrec_cnpj = "Quantidade de Documentos de Arrecadação") |>
tbl_summary(by = ind_noteira) |>
add_p(test.args = all_tests("fisher.test") ~ list(workspace=2e8)) |>
modify_spanning_header(
all_stat_cols() ~ "**Empresas Noteiras**"
) |>
as_flex_table()
library(labelled)
tabela_ft <-
selecao_MEI_v2 |>
select(ind_noteira,ind_simples_auxiliar,qtd_doc_arrec_cnpj,val_medio_por_item_receb) |>
set_variable_labels(ind_simples_auxiliar = "Indicador do Simples Nacional",
qtd_doc_arrec_cnpj = "Quantidade de Documentos de Arrecadação") |>
tbl_summary(by = ind_noteira) |>
add_p(test.args = all_tests("fisher.test") ~ list(workspace=2e8)) |>
modify_spanning_header(
all_stat_cols() ~ "**Empresas Noteiras**"
) |>
as_flex_table()
tabela_ft
tabela_ft <- set_caption(tabela_ft, "my caption")
tabela_ft
tabela_ft <- set_caption(tabela_ft, caption = "mtcars data", autonum = autonum)
tabela_ft
?flextable::flextable()
67/3
source("~/.active-rstudio-document", echo=TRUE)
setwd("~/FCD/POSTECH/techchallenge1")
getwd()
# Obter o diretório de trabalho atual
current_dir <- getwd()
current_dir <- getwd()
current_dir
venv_path <- file.path(current_dir, "venv")
venv_path
use_virtualenv(venv_path, required = TRUE)
library(reticulate)
use_virtualenv(venv_path, required = TRUE)
py_config()
reticulate::repl_python()
